{"version":3,"file":"static/js/737.9a09fe24.chunk.js","mappings":"qLAEO,SAASA,EAAT,GAMH,IAAD,IALDC,KAAAA,OAKC,MALM,SAKN,MAJDC,QAAAA,OAIC,MAJS,GAIT,MAHDC,UAAAA,OAGC,MAHW,GAGX,EAFDC,EAEC,EAFDA,QAEC,IADDC,SAAAA,OACC,SACD,OACE,mBACEJ,KAAMA,EACNE,UAAWA,EACXC,QAASA,EACTC,SAAUA,EAJZ,SAMGH,M,6JCdMI,EAAOC,EAAAA,GAAAA,KAAH,8OAYJC,EAAQD,EAAAA,GAAAA,MAAH,iaAqBLE,EAAQF,EAAAA,GAAAA,MAAH,+gBA+BLG,EAAaH,EAAAA,GAAAA,KAAH,4R,uFC9DhB,SAASI,EAAT,GAKJ,EAJDC,WAIE,IAAD,IAHDC,WAAAA,OAGC,MAHY,GAGZ,EAFDC,EAEC,EAFDA,SACAC,EACC,EADDA,SAEA,OACE,UAAC,KAAD,CAAMD,SAAUA,EAAhB,UACGC,GACD,SAAC,IAAD,CAAQd,KAAK,SAASC,QAASW,EAAYV,UAAU,a,4LCJ5C,SAASa,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAkBC,EAAAA,EAAAA,MAAXC,GAAP,eAEMC,EAAa,WACjBJ,EAAS,cAGX,OACE,SAAC,KAAD,WACE,UAAC,KAAD,WACGG,IACC,SAAC,IAAD,CACET,WAAW,eACXC,SAAU,SAAAU,GACRA,EAAEC,iBACFR,EACES,EAAAA,EAAAA,aAAA,kBACKJ,GADL,IAEEK,KAAMH,EAAEI,OAAOD,KAAKE,MACpBC,OAAQN,EAAEI,OAAOE,OAAOD,UAG5BN,KAEFR,UACE,iCACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEd,KAAK,OACL0B,KAAK,OACLI,QAAQ,8HACRC,MAAM,oIACNC,UAAQ,EACRC,aAAcZ,EAAQK,KACtBQ,aAAa,SAEf,4CAEF,UAAC,KAAD,YACE,SAAC,IAAD,CAAWC,KAAK,eAAhB,UACE,SAAC,KAAD,CACEnC,KAAK,MACL0B,KAAK,SACLK,MAAM,8BACNC,UAAQ,EACRC,aAAcZ,EAAQQ,OACtBK,aAAa,WAGjB,mDAOV,SAAC,IAAD,CACElC,KAAK,SACLE,UAAU,MACVC,QAASmB,EACTrB,QAAS","sources":["components/Button/Button.jsx","components/Forms/Form.styled.jsx","components/Forms/FormElement.jsx","views/EditContactModal/EditContactView.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport function Button({\n  type = 'button',\n  content = '',\n  className = '',\n  onClick,\n  disabled = false,\n}) {\n  return (\n    <button\n      type={type}\n      className={className}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {content}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 1px solid #bfb7f9;\n  background: #302e42;\n  padding: 20px 10px 10px 10px;\n  margin: 20px auto;\n  width: 90%;\n  max-width: 600px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n  margin-bottom: 20px;\n  background: inherit;\n\n  & span {\n    position: absolute;\n    display: inline-block;\n    font-size: 14px;\n    line-height: 14px;\n    text-transform: uppercase;\n    top: calc(50% - 14px / 2);\n    left: 10px;\n    color: #bfb7f9a6;\n    transition: 250ms ease-in-out;\n  }\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #bfb7f9a6;\n  border-radius: 5px;\n  height: 36px;\n  padding: 14px 10px 6px 10px;\n  font-size: 16px;\n  width: 100%;\n  background: inherit;\n  color: #bfb7f9;\n  font-weight: 600;\n\n  &:hover {\n    outline: 1px solid #bfb7f9a6;\n  }\n\n  &:focus {\n    outline: 1px solid #bfb7f9;\n  }\n\n  &:focus ~ span,\n  &:valid ~ span {\n    top: -8px;\n    left: 14px;\n    font-size: 9px;\n    font-weight: 600;\n    padding: 0 4px;\n    color: #bfb7f9;\n    background: inherit;\n  }\n`;\n\nexport const FilterForm = styled.form`\n  background: inherit;\n  margin: 10px 0 0 0;\n  width: 90%;\n\n  & input {\n    padding: 10px;\n  }\n\n  & input::placeholder {\n    font-size: 14px;\n    line-height: 14px;\n    color: #bfb7f9a6;\n    font-weight: 400;\n    text-transform: uppercase;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Form } from './Form.styled';\nimport { Button } from 'components/Button/Button';\n\nexport function FormElement({\n  initValues = {},\n  btnContent = '',\n  onSubmit,\n  children,\n}) {\n  return (\n    <Form onSubmit={onSubmit}>\n      {children}\n      <Button type=\"submit\" content={btnContent} className=\"btn\" />\n    </Form>\n  );\n}\n\nFormElement.propTypes = {\n  initValues: PropTypes.object,\n  btnContent: PropTypes.string,\n  onSubmit: PropTypes.func,\n  children: PropTypes.element,\n};\n","import { useNavigate, useOutletContext } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport InputMask from 'react-input-mask';\nimport { Container, Overlay } from 'views/commonCss.styled';\nimport { Label, Input } from 'components/Forms/Form.styled';\nimport { FormElement } from 'components/Forms/FormElement';\nimport { Button } from 'components/Button/Button';\nimport contactsOperations from 'redux/contacts/contacts-operations';\n\nexport default function Modal() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [contact] = useOutletContext();\n\n  const closeModal = () => {\n    navigate('/contacts');\n  };\n\n  return (\n    <Overlay>\n      <Container>\n        {contact && (\n          <FormElement\n            btnContent=\"Edit contact\"\n            onSubmit={e => {\n              e.preventDefault();\n              dispatch(\n                contactsOperations.editContact({\n                  ...contact,\n                  name: e.target.name.value,\n                  number: e.target.number.value,\n                })\n              );\n              closeModal();\n            }}\n            children={\n              <>\n                <Label>\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -\\.\\][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dot, dash and spaces. For example Anne-Mary Mercer, Mr. Charles, Castelmore d'Artagnan\"\n                    required\n                    defaultValue={contact.name}\n                    autoComplete=\"off\"\n                  />\n                  <span>Edit name</span>\n                </Label>\n                <Label>\n                  <InputMask mask=\"999-999-9999\">\n                    <Input\n                      type=\"tel\"\n                      name=\"number\"\n                      title=\"Phone number must be digits\"\n                      required\n                      defaultValue={contact.number}\n                      autoComplete=\"off\"\n                    />\n                  </InputMask>\n                  <span>Edit number</span>\n                </Label>\n              </>\n            }\n          />\n        )}\n\n        <Button\n          type=\"button\"\n          className=\"btn\"\n          onClick={closeModal}\n          content={'Cancel'}\n        />\n      </Container>\n    </Overlay>\n  );\n}\n"],"names":["Button","type","content","className","onClick","disabled","Form","styled","Label","Input","FilterForm","FormElement","initValues","btnContent","onSubmit","children","Modal","dispatch","useDispatch","navigate","useNavigate","useOutletContext","contact","closeModal","e","preventDefault","contactsOperations","name","target","value","number","pattern","title","required","defaultValue","autoComplete","mask"],"sourceRoot":""}